# DO NOT EDIT - Managed by Puppet
#
# Bacula Storage Daemon Configuration
#   for <%= safe_storage_hostname %>
#   via <%= safe_director_name -%>:director (<%= safe_director_hostname -%>)

# Configure the Director which will manage this Storage Daemon, and the
# Director through which we'll send our messages (will be the same) one.
Director {
  Name = "<%= safe_director_name -%>:director"
  Password = "<%= bacula_server_password -%>"
<% if ($safe_tls_enable) -%>
  # TLS Encryption will be enabled & required from this Director
  TLS Enable = Yes
  TLS Require = Yes
  # We will use the CA file to verify the Director who connects
  TLS Verify Peer = Yes
  TLS CA Certificate File = "/etc/bacula/ca.pem"
  # Finally, Register the Certificate & Key for this Storage Daemon
  TLS Certificate = "/etc/bacula/bacula-sd.pem"
  TLS Key = "/etc/bacula/bacula-sd.pem"
  # Finally, what Common Names of Certificates are allowed?
  TLS Allowed CN = "director@<%= bacula_tls_base -%>"
<% end -%>
}

Messages {
  Name = "<%= safe_director_name -%>:messages:standard"
  Director = "<%= safe_director_name -%>:director" = all
}

# Configure the basic details for the Storage Daemon on this server
Storage {
  Name = "<%= safe_storage_name -%>:storage"
  Working Directory = "/var/lib/bacula"
  PID Directory = "/var/run/bacula"
  Maximum Concurrent Jobs = 20
<% if ($safe_tls_enable) -%>
  # TLS Encryption will be enabled & required for this Storage Daemon
  TLS Enable = Yes
  TLS Require = Yes
  # We will use the CA file to check the File Daemons, but the cookie
  # provided by the Director for this backup run will verify it
  TLS Verify Peer = No
  TLS CA Certificate File = "/etc/bacula/ca.pem"
  # Finally, Register the Certificate & Key for this Storage Daemon
  TLS Certificate = "/etc/bacula/bacula-sd.pem"
  TLS Key = "/etc/bacula/bacula-sd.pem"
<% end -%>
}

# Not configure the default Device this Storage Daemon will provide
Device {
  Name = "FileStorage"
  Media Type = File
  Archive Device = /mnt/bacula/default
  Label Media = Yes
  Random Access = Yes
  Automatic Mount = Yes
  Removable Media = No
  Always Open = No
}

# All other Devices are created by the clients that need them - each will
# prepare their own device and pool configuration, which will then be
# saved under /etc/bacula/bacula-sd.d and imported by the following line:
@|"sh -c 'for f in /etc/bacula/bacula-sd.d/*.conf ; do echo @${f} ; done'"
