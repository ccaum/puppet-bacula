# DO NOT EDIT - Managed by Puppet
#
# Bacula File Daemon Configuration
#   for <%= safe_client_hostname %>
#   via <%= safe_director_name -%>:director (<%= safe_director_hostname -%>)
#    to <%= safe_storage_name -%>:storage:<%= safe_client_name -%> (<%= safe_storage_hostname -%>)

# Configure the Director which will manage this host's backups
Director {
  Name = "<%= safe_director_name -%>:director"
  Password = "<%= bacula_server_password -%>"
<% if ($safe_tls_enable) -%>
  # TLS Encryption will be enabled & required from this Director
  TLS Enable = Yes
  TLS Require = Yes
  # We will use the CA file to verify the Director who connects
  TLS Verify Peer = Yes
  TLS CA Certificate File = "/etc/bacula/ca.pem"
  # Finally, Register the Certificate & Key for this Storage Daemon
  TLS Certificate = "/etc/bacula/bacula-fd.pem"
  TLS Key = "/etc/bacula/bacula-fd.pem"
  # Finally, what Common Names of Certificates are allowed?
  TLS Allowed CN = "director@<%= bacula_tls_base -%>"
<% end -%>
}

# Now configure the actual File Daemon
FileDaemon {
  Name = "<%= safe_client_hostname -%>"
  Working Directory = /var/lib/bacula
  PID Directory = /var/run/bacula
  Maximum Concurrent Jobs = 3
<% if ($safe_tls_enable) -%>
  # TLS Encryption will be enabled & required for this File Daemon
  TLS Enable = Yes
  TLS Require = Yes
  # Register the Certificate & Key for this File Daemon which
  # will be used to verify to the Director and the Storage Daemon
  TLS Certificate = "/etc/bacula/bacula-fd.pem"
  TLS Key = "/etc/bacula/bacula-fd.pem"
  # And the CA File so that we can verify the Director & Storage Daemon
  TLS CA Certificate File = "/etc/bacula/ca.pem"
<% end -%>
}

# Finally, set where the messages are going to go
Messages {
  Name = "<%= safe_director_name -%>:messages:standard"
  Director = "<%= safe_director_name -%>:director" = all, !skipped, !restored
}
